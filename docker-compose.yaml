version: "3.9"

services:
  postgres:
    container_name: postgres
    image: postgres:15.3-alpine
    ports:
      - "5439:5432"
    restart: always
    volumes:
      - ./postgres:/var/lib/postgresql
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    healthcheck:
      test: "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1GB
    networks:
      - custom
  alembic:
    build: .
    env_file:
      - '.env'
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - custom
    command: alembic upgrade head
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend
    env_file:
      - '.env'
    volumes:
      - .:/app/
    depends_on:
      - alembic
    command: python -m src.main
    ports:
      - "8080:8080"
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://backend:8080/api/v1/healthcheck/" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - custom
  mkdocs:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: "mkdocs_container"
    volumes:
      - ./docs:/app
    command: mkdocs serve -a 0.0.0.0:8000
    ports:
      - "15321:8000"
  grafana:
    image: grafana/grafana:8.5.4
    container_name: grafana
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/datasources:/etc/grafana/datasources
      - ./grafana/dashboards:/etc/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_DATASOURCES_PROMETHEUS_URL=http://prometheus:9090
      - GF_DATASOURCES_PROMETHEUS_ACCESS=proxy
    ports:
      - "3000:3000"
    networks:
      - custom
    depends_on:
      - prometheus
  prometheus:
    image: prom/prometheus:v2.33.3
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - '9090:9090'
    networks:
      - custom
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6380:6379"
    volumes:
      - ./redis:/data
    command: redis-server --appendonly yes
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512MB
    networks:
      - custom


networks:
  custom:
    driver: bridge
