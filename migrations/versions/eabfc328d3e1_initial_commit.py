"""initial commit

Revision ID: eabfc328d3e1
Revises: 01a1670187af
Create Date: 2024-03-01 00:26:23.017704

"""
from typing import (
    Sequence,
    Union,
)

from alembic import (
    op,
)
import sqlalchemy as sa
from sqlalchemy.dialects import (
    postgresql,
)

# revision identifiers, used by Alembic.
revision: str = "eabfc328d3e1"
down_revision: Union[str, None] = "01a1670187af"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "interests",
        sa.Column("interest_id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=32), nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("interest_id"),
        sa.UniqueConstraint("title"),
    )
    op.create_table(
        "roles",
        sa.Column("role_id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=64), nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("role_id"),
        sa.UniqueConstraint("title"),
    )
    op.create_table(
        "profiles",
        sa.Column("profile_id", sa.BIGINT(), nullable=False),
        sa.Column("first_name", sa.String(length=128), nullable=False),
        sa.Column("gender", sa.String(length=2), nullable=False),
        sa.Column("show_me", sa.String(length=2), nullable=False),
        sa.Column("date_of_birth", sa.Date(), nullable=False),
        sa.Column("description", sa.String(length=1024), nullable=False),
        sa.Column("country", sa.String(length=32), nullable=False),
        sa.Column("city", sa.String(length=64), nullable=False),
        sa.Column("longitude", sa.Float(), nullable=False),
        sa.Column("user_id", sa.BIGINT(), nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.user_id"],
        ),
        sa.PrimaryKeyConstraint("profile_id"),
    )
    op.create_table(
        "user_interests",
        sa.Column("user_id", sa.BIGINT(), nullable=False),
        sa.Column("interest_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["interest_id"],
            ["interests.interest_id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.user_id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "interest_id"),
    )
    op.create_table(
        "user_roles",
        sa.Column("user_id", sa.BIGINT(), nullable=False),
        sa.Column("role_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["roles.role_id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.user_id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "role_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("user_roles")
    op.drop_table("user_interests")
    op.drop_table("profiles")
    op.drop_table("roles")
    op.drop_table("interests")
    # ### end Alembic commands ###
